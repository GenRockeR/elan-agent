#!/usr/bin/env python

import time
import origin.libnflog_cffi
import signal
from origin.tracker import Tracker
from origin.synapse import Synapse

POST_EVERY_X_REQUESTS = 100
POST_EVERY_X_SECONDS = 300
 
last_post_time = time.time()
post_pool = []

synapse = Synapse(path = 'connections')
 
def notifyNewConnection(pkt):
    global POST_EVERY_X_REQUESTS, POST_EVERY_X_SECONDS
    global last_post_time, post_pool, synapse
    
    pkt['start_time'] = time.strftime('%Y-%m-%dT%H:%M:%SZ', time.gmtime())
     
    post_pool.append(pkt)
     
    if len(post_pool) >= POST_EVERY_X_REQUESTS or POST_EVERY_X_SECONDS <= (time.time() - last_post_time):
        # check if last request finished
        if synapse.request_finished():
            # Check how last request went on
            http_code, result = synapse.get_result()
            if http_code != 201 and http_code != 0:
                # Todo: Raise alert back to CC
                print "Error ", http_code, ': ', result
             
            synapse.start_post(post_pool)
            post_pool = []
 


nflog = origin.libnflog_cffi.NFLOG().generator(0, extra_attrs=['msg_packet_hwhdr', 'prefix'], nlbufsiz=2**24, handle_overflows = False)
fd = next(nflog)
 
tracker = Tracker(new_connection_cb = notifyNewConnection)




# catch TERM signal so final post can execute.
def noop(signum, frame):
    pass
signal.signal(signal.SIGTERM, noop)


try:
    for pkt, hwhdr, direction  in nflog:
        try:
            tracker.processPacket( hwhdr + pkt, direction )
            if tracker.lastEstablishedConnexionsCleanup < time.time() - 60 * 1: # every 1 mn
                tracker.cleanupEstablishedConnexions()
        except Exception as e:
            # TODO: notify error to central manager...
            print 'Exception: ', type(e), e
except:
    pass
finally:
    # Let request finish and send remaining connections, if any
    http_code, result = synapse.get_result()
    if http_code != 201 and http_code != 0:
        # Todo: Raise alert back to CC
        print "Error ", http_code, ': ', result
    if post_pool:
        synapse.post(post_pool)




        
            