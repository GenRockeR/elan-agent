server captive-portal {
    listen {
      type = auth
      ipaddr = 127.0.0.1
      port = 18122
      limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
      }
    }
    
    listen {
      ipaddr = 127.0.0.1
      port = 18123
      type = acct
      limit {
    #   max_pps = 0
    #   idle_timeout = 0
    #   lifetime = 0
    #   max_connections = 0
      }
    }
    
    client captive-portal {
           secret          = a2e4t6u8qmlskdvcbxnw
           shortname       = captive-portal
           ipaddr          = 127.0.0.1
    }
    
    authorize {
        preprocess
      
        if(Connect-Info =~ /authenticator=([0-9]+)/){
            update request {
                &Origin-Auth-Provider := "%{1}"
                &Origin-Auth-Type := "captive-portal"
                &Origin-MAC := &Calling-Station-ID
            }

            authentications

        }
        pap
    }
    
    
    authenticate {
      Auth-Type PAP {
        pap
      }
    }
    
    
    preacct {
      preprocess
      
      acct_counters64
    
      acct_unique
    }
    
    accounting {
      attr_filter.accounting_response
    
      Acct-Type Status-Server {
    
      }
    }
    
    
    session {
    }
    
    
    post-auth {
      #  Uncomment the next few lines to copy the required data into
      #  the EAP-Key-Name attribute
      # if (reply:EAP-Session-Id) {
      #   update reply {
      #     EAP-Key-Name := "%{reply:EAP-Session-Id}"
      #   }
      # }
    
      remove_reply_message_if_eap
    
      Post-Auth-Type REJECT {
        attr_filter.access_reject
    
        eap
    
        remove_reply_message_if_eap
      }
    }
    
    pre-proxy {
    }
    
    post-proxy {
      eap
    }
}
