#!/usr/bin/env python3

from origin.neuron import AsyncDendrite, Synapse
from origin.captive_portal import CONF_PATH, GUEST_ACCESS_CONF_PATH, Administrator

class ConfigurationCacher():
    def __init__(self):
        self.synapse = Synapse()

    def cp_conf_updated(self, data, path):
        for profile in data:
            self.synapse.hset(CONF_PATH, profile['id'], profile)
            
    def ga_conf_updated(self, data, path):
            for profile in data:
                self.synapse.hset(GUEST_ACCESS_CONF_PATH, profile['id'], profile)
                
    def admins_conf_updated(self, data, path):
            Administrator.delete_all()
            for profile in data:
                Administrator.add(**profile)
            
cacher = AsyncDendrite()
cacher.subscribe('captive-portal', cb=cacher.cp_conf_updated)
cacher.subscribe('guest-access',   cb=cacher.ga_conf_updated)
cacher.subscribe('administrator',  cb=cacher.admins_conf_updated)

cacher.start()
