#!/usr/bin/env python

import signal, subprocess, os, sys
from origin.neuron import Synapse
import yaml, re

file = open('/etc/suricata/suricata.yaml', 'r')

conf = yaml.load(file)
os.chdir(conf['default-rule-path'])

rules_updated = False

# Get URL from Synapse so zsync can retrieve efficiently rules
s = Synapse('ids/rules/')
base_url = s.get_url()

for rule in conf['rule-files']:
    output = subprocess.check_output(['zsync', '-q', base_url + rule + '.zsync'])
    m = re.search('fetched *(?P<fetched>\d+)', output)
    if m and (int(m.group('fetched')) > 0):
        rules_updated = True
    
if rules_updated and (sys.argv[1] != '--no-rule-reload') :
    # send USR2 SIG to suricata to reload the rules
    output = subprocess.check_output(['status', 'suricata'])
    m = re.search('process *(?P<pid>\d+)', output)
    if m and m.group('pid'):
        os.kill(int(m.group('pid')), signal.SIGUSR2)